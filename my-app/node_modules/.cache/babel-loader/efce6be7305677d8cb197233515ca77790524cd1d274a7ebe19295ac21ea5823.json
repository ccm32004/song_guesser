{"ast":null,"code":"var _jsxFileName = \"/Users/chingching/Desktop/repos/sideproj/my-app/src/components/SongSnippet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongSnippet = () => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchSnippet = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/snippet');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSong(data);\n      setError(null); // Clear any previous error\n    } catch (err) {\n      console.error('Error fetching the snippet:', err);\n      setError('Error fetching the snippet.');\n      setSong(null); // Clear any previous song data\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taylor Swift Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSnippet,\n      children: \"Get Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [song.title, \" by \", song.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: song.snippet,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), \"Your browser does not support the audio tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(SongSnippet, \"snspCwedWGKR4B3QCPWvaNb5fnA=\");\n_c = SongSnippet;\nexport default SongSnippet;\nvar _c;\n$RefreshReg$(_c, \"SongSnippet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SongSnippet","_s","song","setSong","error","setError","fetchSnippet","response","fetch","ok","Error","data","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","title","artist","controls","src","snippet","type","_c","$RefreshReg$"],"sources":["/Users/chingching/Desktop/repos/sideproj/my-app/src/components/SongSnippet.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SongSnippet = () => {\n    const [song, setSong] = useState(null);\n    const [error, setError] = useState(null);\n\n    const fetchSnippet = async () => {\n        try {\n            const response = await fetch('http://localhost:3000/snippet');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setSong(data);\n            setError(null); // Clear any previous error\n        } catch (err) {\n            console.error('Error fetching the snippet:', err);\n            setError('Error fetching the snippet.');\n            setSong(null); // Clear any previous song data\n        }\n    };\n\n    return (\n        <div>\n            <h1>Taylor Swift Song Snippet</h1>\n            <button onClick={fetchSnippet}>Get Song Snippet</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {song && (\n                <div>\n                    <h2>{song.title} by {song.artist}</h2>\n                    <audio controls>\n                        <source src={song.snippet} type=\"audio/mpeg\" />\n                        Your browser does not support the audio tag.\n                    </audio>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SongSnippet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,OAAO,CAACQ,IAAI,CAAC;MACbN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVC,OAAO,CAACV,KAAK,CAAC,6BAA6B,EAAES,GAAG,CAAC;MACjDR,QAAQ,CAAC,6BAA6B,CAAC;MACvCF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCpB,OAAA;MAAQqB,OAAO,EAAEd,YAAa;MAAAS,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvDf,KAAK,iBAAIL,OAAA;MAAGsB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDjB,IAAI,iBACDH,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,GAAKb,IAAI,CAACqB,KAAK,EAAC,MAAI,EAACrB,IAAI,CAACsB,MAAM;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCpB,OAAA;QAAO0B,QAAQ;QAAAV,QAAA,gBACXhB,OAAA;UAAQ2B,GAAG,EAAExB,IAAI,CAACyB,OAAQ;UAACC,IAAI,EAAC;QAAY;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gDAEnD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CArCID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}