{"ast":null,"code":"var _jsxFileName = \"/Users/chingching/Desktop/repos/sideproj/my-app/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [trackDetails, setTrackDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchSnippet = async () => {\n    try {\n      const response = await fetch('http://localhost:8888/getTrackId');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSong(data);\n      setError(null); // Clear any previous error\n\n      // Fetch track details using the track ID\n      const trackId = data.uri.split(':').pop(); // Get the last part of the URI\n      const trackResponse = await fetch(`http://localhost:8888/track/${trackId}`);\n      if (!trackResponse.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const trackData = await trackResponse.json();\n      setTrackDetails(trackData); // Store the track details\n    } catch (err) {\n      console.error('Error fetching the snippet or track details:', err);\n      setError('Error fetching the song snippet or track details.');\n      setSong(null); // Clear any previous song data\n      setTrackDetails(null); // Clear previous track details\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taylor Swift Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSnippet,\n      children: \"Get Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [song.title, \" by \", song.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: song.preview_url,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), \"Your browser does not support the audio tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", trackDetails.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"8vfhflTvj9O/XYSmvnByRsqhVu4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","song","setSong","trackDetails","setTrackDetails","error","setError","fetchSnippet","response","fetch","ok","Error","data","json","trackId","uri","split","pop","trackResponse","trackData","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","title","artist","controls","src","preview_url","type","album","_c","$RefreshReg$"],"sources":["/Users/chingching/Desktop/repos/sideproj/my-app/src/pages/Dashboard.js"],"sourcesContent":["// Dashboard.js\nimport React, { useState } from 'react';\n\nconst Dashboard = () => {\n    const [song, setSong] = useState(null);\n    const [trackDetails, setTrackDetails] = useState(null);\n    const [error, setError] = useState(null);\n\n    const fetchSnippet = async () => {\n        try {\n            const response = await fetch('http://localhost:8888/getTrackId');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setSong(data);\n            setError(null); // Clear any previous error\n\n            // Fetch track details using the track ID\n            const trackId = data.uri.split(':').pop(); // Get the last part of the URI\n            const trackResponse = await fetch(`http://localhost:8888/track/${trackId}`);\n            if (!trackResponse.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const trackData = await trackResponse.json();\n            setTrackDetails(trackData); // Store the track details\n        } catch (err) {\n            console.error('Error fetching the snippet or track details:', err);\n            setError('Error fetching the song snippet or track details.');\n            setSong(null); // Clear any previous song data\n            setTrackDetails(null); // Clear previous track details\n        }\n    };\n\n    return (\n        <div>\n            <h1>Taylor Swift Song Snippet</h1>\n            <button onClick={fetchSnippet}>Get Song Snippet</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {song && (\n                <div>\n                    <h2>{song.title} by {song.artist}</h2>\n                    <audio controls>\n                        <source src={song.preview_url} type=\"audio/mpeg\" />\n                        Your browser does not support the audio tag.\n                    </audio>\n                </div>\n            )}\n            {trackDetails && (\n                <div>\n                    <h3>Track Details</h3>\n                    <p>Album: {trackDetails.album}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}