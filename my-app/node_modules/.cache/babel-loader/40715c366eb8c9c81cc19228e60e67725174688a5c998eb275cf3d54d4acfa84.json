{"ast":null,"code":"var _jsxFileName = \"/Users/chingching/Desktop/repos/sideproj/my-app/src/components/SongSnippet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongSnippet = () => {\n  _s();\n  const [song, setSong] = useState(null);\n  const [trackDetails, setTrackDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchSnippet = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/snippet');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSong(data);\n      setError(null); // Clear any previous error\n\n      // Fetch track details using the track ID\n      const trackResponse = await fetch(`http://localhost:3001/track/${data.trackId}`);\n      if (!trackResponse.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const trackData = await trackResponse.json();\n      setTrackDetails(trackData); // Store the track details\n    } catch (err) {\n      console.error('Error fetching the snippet or track details:', err);\n      setError('Error fetching the song snippet or track details.');\n      setSong(null); // Clear any previous song data\n      setTrackDetails(null); // Clear previous track details\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taylor Swift Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSnippet,\n      children: \"Get Song Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), song && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [song.title, \" by \", song.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: song.preview_url,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), \"Your browser does not support the audio tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", trackDetails.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SongSnippet, \"8vfhflTvj9O/XYSmvnByRsqhVu4=\");\n_c = SongSnippet;\nexport default SongSnippet;\nvar _c;\n$RefreshReg$(_c, \"SongSnippet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SongSnippet","_s","song","setSong","trackDetails","setTrackDetails","error","setError","fetchSnippet","response","fetch","ok","Error","data","json","trackResponse","trackId","trackData","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","title","artist","controls","src","preview_url","type","album","_c","$RefreshReg$"],"sources":["/Users/chingching/Desktop/repos/sideproj/my-app/src/components/SongSnippet.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SongSnippet = () => {\n    const [song, setSong] = useState(null);\n    const [trackDetails, setTrackDetails] = useState(null);\n    const [error, setError] = useState(null);\n\n    const fetchSnippet = async () => {\n        try {\n            const response = await fetch('http://localhost:3001/snippet');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setSong(data);\n            setError(null); // Clear any previous error\n            \n            // Fetch track details using the track ID\n            const trackResponse = await fetch(`http://localhost:3001/track/${data.trackId}`);\n            if (!trackResponse.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const trackData = await trackResponse.json();\n            setTrackDetails(trackData); // Store the track details\n        } catch (err) {\n            console.error('Error fetching the snippet or track details:', err);\n            setError('Error fetching the song snippet or track details.');\n            setSong(null); // Clear any previous song data\n            setTrackDetails(null); // Clear previous track details\n        }\n    };\n\n    return (\n        <div>\n            <h1>Taylor Swift Song Snippet</h1>\n            <button onClick={fetchSnippet}>Get Song Snippet</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {song && (\n                <div>\n                    <h2>{song.title} by {song.artist}</h2>\n                    <audio controls>\n                        <source src={song.preview_url} type=\"audio/mpeg\" />\n                        Your browser does not support the audio tag.\n                    </audio>\n                </div>\n            )}\n            {trackDetails && (\n                <div>\n                    <h3>Track Details</h3>\n                    <p>Album: {trackDetails.album}</p>\n                    {/* Add more track details as needed */}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SongSnippet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}