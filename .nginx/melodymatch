server {
    listen 80;
    server_name melodymatch.cc www.melodymatch.cc;
    return 301 https://$host$request_uri;
}

# HTTPS - Handle SSL traffic
server {
    listen 443 ssl;
    server_name melodymatch.cc www.melodymatch.cc;

    # SSL Certificate
    ssl_certificate /etc/ssl/certs/certificate.crt;  
    ssl_certificate_key /etc/ssl/private/private.key;  

    # Root directory 
    root /var/www/melodymatch;
    index index.html;

    # Enable Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/json
        application/xml
        image/svg+xml;

    # Serve static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
        expires 30d;
        access_log off;
        try_files $uri $uri/ =404;
    }

    # Serve images from public folder if needed
    location /images/ {
        root /var/www/melodymatch/public;
        try_files $uri $uri/ =404;
        expires 30d;
        access_log off;
    }

    # Reverse proxy for API (Docker backend)
    location /api/ {
        proxy_pass http://localhost:5001;  # Port of your Docker Express backend
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    # Handle client-side routing with React (for SPA)
    location / {
        try_files $uri /index.html;
    }
}
